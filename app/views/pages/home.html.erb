<div id="readArea">
      <button onclick="connectMetamask()">CONNECT TO METAMASK</button>
      <p id="userArea">Status: Not connected to Metamask</p>

      <button onclick="connectContract()">CONNECT TO CONTRACT</button>
      <p id="contractArea">Status: Not connected to Contract</p>

      <button onclick="getContractAccount()"> GET CONTRACT ACCOUNT </button>
      <p id="contractAccount">Contract Account: Not Connected to Contract</p>

      <button onclick="getBalanceApple()">GET BALANCE OF THE CONTRACT</button>
      <p id="balanceArea">Balance: Not Connected to Contract</p>

</div>

<div id="writeArea">
    <button onclick="depositContract()">Send ether to the Contract</button><br>
    <input type="number" id="depositInput" placeholder="Enter Amount"><br> <br>

    <button onclick="withdraw()">WITHDRAW ETHER TO ANY ADDRESS</button> <br>
    <input type="text" id="addressInput" placeholder="Enter Address"> <br>
    <input type="number" id="amountInput" placeholder="Enter Amount">
</div>

<script>

    let account;
    const connectMetamask = async () => {
        if(window.ethereum !== "undefined") {
            const accounts = await ethereum.request({method: "eth_requestAccounts"});
            account = accounts[0];
            document.getElementById("userArea").innerHTML = `User Account: ${account}`;
        }
        else {
            document.getElementById("userArea").innerHTML = "Please install Metamask";
        }
    }

    const connectContract = async () => {
        const ABI = [
            {
                "inputs": [],
                "name": "deposit",
                "outputs": [],
                "stateMutability": "payable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address payable",
                        "name": "_to",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256",
                        "name": "_amount",
                        "type": "uint256"
                    }
                ],
                "name": "withdraw",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "getAddress",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "getBalance",
                "outputs": [
                    {
                        "internalType": "uint256",
                        "name": "",
                        "type": "uint256"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ];
        const Address = "0xf178eA320b7069b1553CEf355A07312390A4B039";
        window.web3 = await new Web3(window.ethereum);
        window.contract = await new window.web3.eth.Contract(ABI, Address);
        document.getElementById("contractArea").innerHTML = "Connected to Contract";
    }

    const getContractAccount = async () => {
        const data = await window.contract.methods.getAddress().call();
        document.getElementById("contractAccount").innerHTML = `Contract Account: ${data}`;
    }

    const getBalanceApple = async () => {
        const data = await window.contract.methods.getBalance().call();
        document.getElementById("balanceArea").innerHTML = `Contract Balance: ${data}`;
    }

    const depositContract = async () => {
        const amount = document.getElementById("depositInput").value;
        await window.contract.methods.deposit().send({from: account, value: amount});
    }

    const withdraw = async () => {
        const amount = document.getElementById("amountInput").value;
        const address = document.getElementById("addressInput").value;
        await window.contract.methods.withdraw(address, amount).send({from: account});
    }

</script>


<div id="home">
  <div class="banner-video">
    <video autoplay="autoplay" muted="muted" loop="loop" class="banner-video">
      <source src="https://static.videezy.com/system/resources/previews/000/044/460/original/Comp_1_6_1.mp4">
    </video>
  </div>
  <div class="home-pitch">
    <h4 class="text-center mb-3">Become a <span class="green">Code Hunter</span></h4>
    <div class="pitch">
      <div class="pitch-text">
        <h1 class="mb-3"> <span class="green">Solve bugs</span>, receive experience and get paid</h1>
      </div>
      <div class="pitch-button">
        <a href="/bounties" class="button text-center mt-3">Get started</a>
      </div>
    </div>
    <div class="learn-more">
      <h5 class="">Why use <span class="green">Code Hunter?</span></h5>
      <%= link_to "#moving-card", class:"button-white text-center" do %>
      <%# <a href="#" class="button-white text-center">Learn more</a> %>
        <p class="button-white text-center">Learn more</p>
        <div class="card_icon">
          <i class="fa-solid fa-chevrons-down"></i>
        </div>
      <% end %>
    </div>
  </div>
</div>



<div id="moving-card"  data-controller="scroll-reveal">

  <div class="card-height">

    <div class="d-flex flex-column">
      <div data-scroll-reveal-target="item" class="card-pink card-down reveal" data-delay="250ms">
        <div class="card_icon">
          <i class="fa-brands fa-ethereum"></i>
        </div>
        <h2 class="card_title">Earn up to $500/month</h2>
        <div class="d-flex justify-content-center card__apply">
          <a class="card_link" href="/bounties">Start earning<i class="fas fa-arrow-right"></i></a>
        </div>
      </div>
    </div>

    <div class="d-flex flex-column">
      <div  data-scroll-reveal-target="item" class="card-pink card-down reveal" data-delay="2.5s">
        <div class="card_icon">
          <i class="fa-solid fa-stopwatch"></i>
        </div>
        <h2 class="card_title">+60% faster responses</h2>
        <p class="d-flex justify-content-center card__apply">
        <a class="card_link" href="/bounties">Fast bug fix <i class="fas fa-arrow-right"></i></a>
        </p>
      </div>
    </div>

    <div class="d-flex flex-column">
      <div data-scroll-reveal-target="item" class="card-pink card-down reveal" data-delay="5s">
        <div class="card_icon">
          <i class="fa-solid fa-bullseye"></i>
        </div>
        <h2 class="card_title">Average transaction fee of 0.001 $</h2>
        <p class="d-flex justify-content-center card__apply">
        <a class="card_link" href="/bounties">Put up a bounty<i class="fas fa-arrow-right"></i></a>
        </p>
      </div>
    </div>

  </div>

</div>
<div id="home-will">
  <div class="banner-description">
  </div>

  <%# <div class="d-flex flex-column" style="margin-top:100px">
    <a href="/bounties" class="button">Launch app</a>
  </div> %>

  <h5>How does it <span class="green">work?</span></h5>
  <div class="d-flex justify-content-around">
    <div class="container">
      <div class="card1">
          <div class="face face1">
            <div class="content">
              <h3>Step 1</h3>
            </div>
          </div>
          <div class="face face2" style="padding-bottom: 0px !important; padding-top: 100px !important;">
            <div class="content">
              <p>Define your bug with the coding language(s) and difficulty</p>
            </div>
          </div>
        </div>
    </div>
    <div class="container">
      <div class="card1">
          <div class="face face1">
            <div class="content">
              <h3>Step 2</h3>
            </div>
          </div>
          <div class="face face2" style="padding-bottom: 0px !important; padding-top: 100px !important;">
            <div class="content">
              <p>Set the price that you're willing to pay for the solution</p>
            </div>
          </div>
        </div>
    </div>
    <div class="container">
        <div class="card1">
          <div class="face face1">
            <div class="content">
              <h3>Step 3</h3>
            </div>
          </div>
          <div class="face face2" style="padding-bottom: 0px !important; padding-top: 100px !important;">
            <div class="content">
              <p>Check the proposed solutions and pick the right one</p>
            </div>
          </div>
        </div>
    </div>
  </div>

  <div class="container-bot">
    <%= link_to "To top", "#", class:"button-white" %>
  </div>
</div>


  <%# <div class="footer">
  <p>Made with ðŸ’› by the bug hunters team</p>
  <%# <%= link_to "FAQ", new_user_session_path %>
